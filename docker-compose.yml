version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: suan-mai-postgres
    environment:
      POSTGRES_DB: suanmai
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis
  redis:
    image: redis:7-alpine
    container_name: suan-mai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Auth Service
  service-auth:
    build:
      context: ./apps/service-auth
      dockerfile: Dockerfile
    container_name: suan-mai-auth
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/suanmai
      - JWT_SECRET=your-super-secret-jwt-key
      - PORT=3100
    ports:
      - "3100:3100"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # User Service
  service-user:
    build:
      context: ./apps/service-user
      dockerfile: Dockerfile
    container_name: suan-mai-user
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/suanmai
      - PORT=3101
    ports:
      - "3101:3101"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Schema Service
  service-schema:
    build:
      context: ./apps/service-schema
      dockerfile: Dockerfile
    container_name: suan-mai-schema
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/suanmai
      - PORT=3102
    ports:
      - "3102:3102"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Data Service
  service-data:
    build:
      context: ./apps/service-data
      dockerfile: Dockerfile
    container_name: suan-mai-data
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/suanmai
      - PORT=3103
    ports:
      - "3103:3103"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  # Publish Service (with Redis)
  service-publish:
    build:
      context: ./apps/service-publish
      dockerfile: Dockerfile
    container_name: suan-mai-publish
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/suanmai
      - REDIS_URL=redis://redis:6379
      - PORT=3104
    ports:
      - "3104:3104"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # API Gateway
  api-gateway:
    build:
      context: ./apps/api-gateway
      dockerfile: Dockerfile
    container_name: suan-mai-gateway
    environment:
      - AUTH_SERVICE_URL=http://service-auth:3100/graphql
      - USER_SERVICE_URL=http://service-user:3101/graphql
      - SCHEMA_SERVICE_URL=http://service-schema:3102/graphql
      - DATA_SERVICE_URL=http://service-data:3103/graphql
      - PUBLISH_SERVICE_URL=http://service-publish:3104/graphql
      - PORT=4000
    ports:
      - "4000:4000"
    depends_on:
      - service-auth
      - service-user
      - service-schema
      - service-data
      - service-publish
    restart: unless-stopped

  # Web Main App
  web-main:
    build:
      context: ./apps/web-main
      dockerfile: Dockerfile
    container_name: suan-mai-web-main
    environment:
      - NEXT_PUBLIC_GRAPHQL_URL=http://localhost:4000/graphql
      - PORT=3000
    ports:
      - "3000:3000"
    depends_on:
      - api-gateway
    restart: unless-stopped

  # Web Admin App
  web-admin:
    build:
      context: ./apps/web-admin
      dockerfile: Dockerfile
    container_name: suan-mai-web-admin
    environment:
      - NEXT_PUBLIC_GRAPHQL_URL=http://localhost:4000/graphql
      - PORT=3001
    ports:
      - "3001:3001"
    depends_on:
      - api-gateway
    restart: unless-stopped

  # Web Docs App
  web-docs:
    build:
      context: ./apps/web-docs
      dockerfile: Dockerfile
    container_name: suan-mai-web-docs
    environment:
      - PORT=3002
    ports:
      - "3002:3002"
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: suan-mai-network
